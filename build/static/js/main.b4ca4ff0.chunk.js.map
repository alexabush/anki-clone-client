{"version":3,"sources":["components/AddDeckForm.js","components/SelectDeck.js","components/Card.js","components/Deck.js","components/UseDeck.js","components/AddCardForm.js","components/ManageDeck.js","helpers/createCard.js","helpers/PriorityQueue.js","helpers/calcPriority.js","components/ShowDeck.js","components/AddUserForm.js","components/ManageUsers.js","components/Layout.js","AppNav.js","serviceWorker.js","index.js"],"names":["AddDeckForm","state","name","handleChange","e","_e$target","target","value","_this","setState","Object","defineProperty","handleSubmit","preventDefault","props","addDeck","react_default","a","createElement","className","Form_default","onSubmit","this","Group","controlId","Label","Control","type","onChange","Button_default","PureComponent","SelectDeck","decks","deckName","userId","nav","match","params","fetch","concat","method","headers","Content-Type","body","JSON","stringify","then","res","json","data","console","log","prev","toConsumableArray","deck","_this2","decksLis","map","_ref","id","key","Link","to","components_AddDeckForm","Card","showAnswer","selected","clickHandler","handleSelectChange","updateCardRating","cardData","_this$props$cardData","question","answer","checked","onClick","Deck","handleDelete","deleteCard","cardLis","priorityQueue","getDeck","card","idx","uuid","allowDelete","Delete_default","UseDeck","components_Card","currentCard","components_Deck","AddCardForm","addCard","ManageDeck","components_AddCardForm","createCard","easy","arguments","length","undefined","medium","hard","priority","PriorityQueue","classCallCheck","push","i","queue","splice","unshift","pop","peek","removeById","cardId","filter","calcPriority","ShowDeck","buildPriorityQueue","cards","newPriorityQueue","forEach","_this$props$nav$match","deckId","Accept","_this$props$nav$match2","_updateData","rating","_this$props$nav$match3","cardClone","objectSpread","updateData","prevCard","_this$props$nav$match4","newCard","status","components_UseDeck","components_ManageDeck","AddUserForm","email","password","_this$state","addUser","process","ManageUsers","_Component","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","users","user","inherits","createClass","catch","_ref2","components_AddUserForm","Component","Layout","children","RedirectComponent","Redirect","SelectDeckOption","components_SelectDeck","UseDeckOption","components_ShowDeck","ManageDeckOption","AppNav","components_Layout","BrowserRouter","Route","exact","path","component","AppNav_RedirectComponent","components_ManageUsers","Boolean","window","location","hostname","ReactDOM","render","src_AppNav","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4ca4ff0.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass AddDeckForm extends PureComponent {\n  state = { name: '' };\n\n  handleChange = e => {\n    let { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.addDeck(this.state.name);\n    this.setState({ name: '' });\n  };\n\n  render() {\n    return (\n      <div className=\"AddDeckForm\">\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>\n              Name:\n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={this.handleChange}\n              />\n            </Form.Label>\n          </Form.Group>\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default AddDeckForm;\n","import React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport AddDeckForm from './AddDeckForm';\n\nclass SelectDeck extends PureComponent {\n  state = {\n    decks: []\n  };\n\n  componentDidMount() {\n    console.log('SelectDeck cdm');\n    // implement auth\n    let { userId } = this.props.nav.match.params;\n    fetch(`https://alex-anki-clone.herokuapp.com/api/users/${userId}/decks`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState(prev => {\n          return { decks: data.decks };\n        });\n      });\n  }\n\n  addDeck = deckName => {\n    let { userId } = this.props.nav.match.params;\n    fetch(`https://alex-anki-clone.herokuapp.com/api/users/${userId}/decks`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ name: deckName })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState(prev => {\n          return { decks: [...prev.decks, data.deck] };\n        });\n      });\n  };\n\n  render() {\n    console.log('SelectDeck');\n    let { userId } = this.props.nav.match.params;\n    let decksLis = this.state.decks.map(({ name, id }) => {\n      return (\n        <li key={id}>\n          {name}\n          <div>\n            <Link to={`/users/${userId}/decks/${id}/useDeck`}>\n              Use This Deck\n            </Link>{' '}\n          </div>\n          <div>\n            <Link to={`/users/${userId}/decks/${id}/manageDeck`}>\n              Add/Remove Cards\n            </Link>\n          </div>\n        </li>\n      );\n    });\n    return (\n      <div>\n        <h1>Select Deck</h1>\n        <ol>{decksLis}</ol>\n        <h2>Add New Deck</h2>\n        <AddDeckForm addDeck={this.addDeck} />\n        <Link to={`/users`}>Back to all users</Link>\n      </div>\n    );\n  }\n}\n\nexport default SelectDeck;\n","import React, { PureComponent } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nclass Card extends PureComponent {\n  state = { showAnswer: false, selected: 'hard' };\n\n  clickHandler = () => {\n    this.setState({ showAnswer: true });\n  };\n\n  handleSelectChange = e => {\n    this.setState({ selected: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.props);\n    this.setState({ showAnswer: false });\n    this.props.updateCardRating(this.props.cardData.id, this.state.selected);\n  };\n\n  render() {\n    let { question, answer } = this.props.cardData;\n    if (!this.state.showAnswer) {\n      return (\n        <div className=\"Card\">\n          <h3>Current Question</h3>\n          <p>Q. {question}</p>\n          <Button className=\"showAnswerBtn\" onClick={this.clickHandler}>\n            Show Answer\n          </Button>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"Card\">\n          <h3>Rate Question Difficulty</h3>\n          <p>Q. {question}</p>\n          <p>A. {answer}</p>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"radio\">\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"easy\"\n                  checked={this.state.selected === 'easy'}\n                  onChange={this.handleSelectChange}\n                />\n                Easy\n              </label>\n            </div>\n            <div className=\"radio\">\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"medium\"\n                  checked={this.state.selected === 'medium'}\n                  onChange={this.handleSelectChange}\n                />\n                Medium\n              </label>\n            </div>\n            <div className=\"radio\">\n              <label>\n                <input\n                  type=\"radio\"\n                  value=\"hard\"\n                  checked={this.state.selected === 'hard'}\n                  onChange={this.handleSelectChange}\n                />\n                Hard\n              </label>\n            </div>\n            <Button type=\"submit\">Save</Button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Card;\n","import React, { PureComponent } from 'react';\nimport uuid from 'uuid/v4';\nimport Delete from '@material-ui/icons/Delete';\n\nclass Deck extends PureComponent {\n  handleDelete = id => {\n    this.props.deleteCard(id);\n  };\n\n  render() {\n    let cardLis = [];\n    if (this.props.priorityQueue.getDeck) {\n      cardLis = this.props.priorityQueue.getDeck.map((card, idx) => {\n        return (\n          <li className=\"card-li\" key={uuid()}>\n            {idx + 1} Q. {card.question}\n            {this.props.allowDelete ? (\n              <Delete onClick={() => this.handleDelete(card.id)} />\n            ) : null}\n          </li>\n        );\n      });\n    }\n    return (\n      <div className=\"Deck\">\n        <h3>Upcoming Cards</h3>\n        <ul>{cardLis}</ul>\n      </div>\n    );\n  }\n}\n\nexport default Deck;\n","import React, { PureComponent } from 'react';\nimport Card from './Card';\nimport Deck from './Deck';\n\nclass UseDeck extends PureComponent {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <Card\n              cardData={this.props.currentCard}\n              updateCardRating={this.props.updateCardRating}\n            />\n          </div>\n          <div className=\"col-sm-6\">\n            <Deck\n              priorityQueue={this.props.priorityQueue}\n              deleteCard={this.props.deleteCard}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UseDeck;\n","import React, { PureComponent } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass AddCardForm extends PureComponent {\n  state = { question: '', answer: '' };\n\n  handleChange = e => {\n    let { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.addCard(this.state.question, this.state.answer);\n    this.setState({ question: '', answer: '' });\n  };\n\n  render() {\n    return (\n      <div className=\"AddCardForm\">\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group controlId=\"question\">\n            <Form.Label>\n              Name:\n              <Form.Control\n                type=\"text\"\n                name=\"question\"\n                value={this.state.question}\n                onChange={this.handleChange}\n              />\n            </Form.Label>\n          </Form.Group>\n          <Form.Group controlId=\"answer\">\n            <Form.Label>\n              Answer:\n              <Form.Control\n                type=\"text\"\n                name=\"answer\"\n                value={this.state.answer}\n                onChange={this.handleChange}\n              />\n            </Form.Label>\n          </Form.Group>\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default AddCardForm;\n","import React, { PureComponent } from 'react';\nimport Deck from './Deck';\nimport AddCardForm from './AddCardForm';\n\nclass ManageDeck extends PureComponent {\n  render() {\n    console.log('ManageDeck', this.props.priorityQueue);\n    return (\n      <div className=\"manage-deck\">\n        <h1>Manage Deck</h1>\n        <Deck\n          priorityQueue={this.props.priorityQueue}\n          deleteCard={this.props.deleteCard}\n          allowDelete={true}\n        />\n        <AddCardForm addCard={this.props.addCard} />\n      </div>\n    );\n  }\n}\n\nexport default ManageDeck;\n","function createCard(\n  id,\n  question,\n  answer,\n  easy = 0,\n  medium = 0,\n  hard = 0,\n  priority = 0\n) {\n  return {\n    id,\n    question,\n    answer,\n    priority,\n    easy,\n    medium,\n    hard\n  };\n}\n\nexport default createCard;","class PriorityQueue {\n  constructor() {\n    this.queue = [];\n  }\n\n  get getDeck() {\n    return this.queue;\n  }\n\n  push = card => {\n    for (let i = this.queue.length - 1; i >= 0; i--) {\n      if (this.queue[i].priority < card.priority) continue;\n      this.queue.splice(i + 1, 0, card);\n      return;\n    }\n    this.queue.unshift(card);\n  };\n\n  pop = () => {\n    let card = this.queue.pop();\n    return card;\n  };\n\n  peek = () => {\n    return this.queue[this.queue.length - 1];\n  };\n\n  removeById = cardId => {\n    this.queue = this.queue.filter(card => {\n      return card.id !== cardId;\n    });\n    return this;\n  };\n}\n\nexport default PriorityQueue","function calcPriority(easy = 0, medium = 0, hard = 0) {\n  let priorityScore = easy * 10 + medium * 5 + hard * 1;\n  return priorityScore;\n}\n\nexport default calcPriority","import React, { PureComponent } from 'react';\n// import uuid from 'uuid/v4';\nimport { Link } from 'react-router-dom';\nimport UseDeck from './UseDeck';\nimport ManageDeck from './ManageDeck';\nimport createCard from '../helpers/createCard.js';\nimport PriorityQueue from '../helpers/PriorityQueue.js';\nimport calcPriority from '../helpers/calcPriority.js';\n\nclass ShowDeck extends PureComponent {\n  state = {\n    currentCard: {},\n    priorityQueue: new PriorityQueue()\n  };\n\n  componentDidMount() {\n    // implement auth\n    let { userId, deckId } = this.props.nav.match.params;\n    fetch(\n      `https://alex-anki-clone.herokuapp.com/api/users/${userId}/decks/${deckId}/cards`\n    )\n      .then(res => res.json())\n      .then(data => {\n        this.setState(state => {\n          if (data.cards.length < 1) return state;\n          const newPriorityQueue = this.buildPriorityQueue(data.cards);\n          let newCard = newPriorityQueue.peek();\n          return { priorityQueue: newPriorityQueue, currentCard: newCard };\n        });\n      });\n  }\n\n  buildPriorityQueue = cards => {\n    const newPriorityQueue = new PriorityQueue();\n    cards.forEach(card => {\n      let { id, question, answer, easy, medium, hard, priority } = card;\n      newPriorityQueue.push(\n        createCard(id, question, answer, easy, medium, hard, priority)\n      );\n    });\n    return newPriorityQueue;\n  };\n\n  addCard = (question, answer) => {\n    let { userId, deckId } = this.props.nav.match.params;\n    fetch(\n      `https://alex-anki-clone.herokuapp.com/api/users/${userId}/decks/${deckId}/cards`,\n      {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ question, answer })\n      }\n    )\n      .then(res => res.json())\n      .then(({ card }) => {\n        this.setState(prev => {\n          const newPriorityQueue = this.buildPriorityQueue([\n            ...prev.priorityQueue.getDeck,\n            card\n          ]);\n          return { priorityQueue: newPriorityQueue };\n        });\n      });\n  };\n\n  deleteCard = cardId => {\n    let { userId, deckId } = this.props.nav.match.params;\n    fetch(\n      `https://alex-anki-clone.herokuapp.com/api/users/${userId}/decks/${deckId}/cards/${cardId}`,\n      {\n        method: 'DELETE',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    // bug where if current card is deleted it doesn't get deleted\n    this.setState(prev => {\n      let modifiedQueue = prev.priorityQueue.removeById(cardId);\n      return { priorityQueue: modifiedQueue };\n    });\n  };\n\n  updateCardRating = (cardId, rating = 'hard') => {\n    let { userId, deckId } = this.props.nav.match.params;\n    let cardClone = { ...this.state.currentCard };\n    cardClone[rating] = cardClone[rating] + 1;\n    let { easy, medium, hard } = cardClone;\n    let updateData = {\n      [rating]: cardClone[rating],\n      priority: calcPriority(easy, medium, hard)\n    };\n    fetch(\n      `https://alex-anki-clone.herokuapp.com/api/users/${userId}/decks/${deckId}/cards/${cardId}`,\n      {\n        method: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updateData)\n      }\n    );\n    this.setState(prev => {\n      let prevCard = prev.currentCard;\n      prevCard[rating] += 1;\n      prevCard.priority = updateData.priority;\n      prev.priorityQueue.pop();\n      prev.priorityQueue.push(prevCard);\n      let newCurrentCard = prev.priorityQueue.peek();\n      return { currentCard: newCurrentCard, priorityQueue: prev.priorityQueue };\n    });\n  };\n\n  render() {\n    let { userId } = this.props.nav.match.params;\n    return (\n      <div className=\"ShowDeck\">\n        <Link to={`/users/${userId}/decks`}>Back to all decks</Link>\n\n        {this.props.status === 'use' ? (\n          <UseDeck\n            currentCard={this.state.currentCard}\n            updateCardRating={this.updateCardRating}\n            priorityQueue={this.state.priorityQueue}\n            deleteCard={this.deleteCard}\n          />\n        ) : (\n          <ManageDeck\n            priorityQueue={this.state.priorityQueue}\n            deleteCard={this.deleteCard}\n            addCard={this.addCard}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ShowDeck;\n","import React, { PureComponent } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass AddUserForm extends PureComponent {\n  state = { name: '', email: '', password: '' };\n\n  handleChange = e => {\n    let { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, email, password } = this.state;\n    this.props.addUser(name, email, password);\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    console.log(process.env);\n    return (\n      <div className=\"AddUserForm\">\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group controlId=\"userName\">\n            <Form.Label>\n              Name:\n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={this.handleChange}\n              />\n            </Form.Label>\n          </Form.Group>\n\n          <Form.Group controlId=\"userEmail\">\n            <Form.Label>\n              Email:\n              <Form.Control\n                type=\"email\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={this.handleChange}\n              />\n            </Form.Label>\n          </Form.Group>\n          <Form.Group controlId=\"userPassword\">\n            <Form.Label>\n              Password:\n              <Form.Control\n                type=\"text\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n            </Form.Label>\n          </Form.Group>\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default AddUserForm;\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport AddUserForm from './AddUserForm';\n\nexport class ManageUsers extends Component {\n  static propTypes = {};\n\n  state = {\n    users: []\n  };\n\n  componentDidMount() {\n    // implement auth\n    console.log('in cdm manage users');\n    fetch(`https://alex-anki-clone.herokuapp.com/api/users`)\n      .then(res => res.json())\n      .then(data => {\n        console.log('data', data);\n        this.setState(state => {\n          if (data.users.length < 1) return state;\n          return { users: data.users };\n        });\n      })\n      .catch(e => {\n        console.log('There was a problem getting user data', e);\n      });\n  }\n\n  addUser = (name, email, password) => {\n    console.log('in showdeck.js addUser');\n    fetch(`https://alex-anki-clone.herokuapp.com/api/users`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ name, email, password })\n    })\n      .then(res => res.json())\n      .then(({ user }) => {\n        this.setState(prev => {\n          return { users: [...prev.users, user] };\n        });\n      });\n  };\n\n  //   deleteCard = cardId => {\n  //     let { userId, deckId } = this.props.nav.match.params;\n  //     fetch(\n  //       `/api/users/${userId}/decks/${deckId}/cards/${cardId}`,\n  //       {\n  //         method: 'DELETE',\n  //         headers: {\n  //           Accept: 'application/json',\n  //           'Content-Type': 'application/json'\n  //         }\n  //       }\n  //     );\n  //     // bug where if current card is deleted it doesn't get deleted\n  //     this.setState(prev => {\n  //       let modifiedQueue = prev.priorityQueue.removeById(cardId);\n  //       return { priorityQueue: modifiedQueue };\n  //     });\n  //   };\n\n  //   updateCardRating = (cardId, rating = 'hard') => {\n  //     let { userId, deckId } = this.props.nav.match.params;\n  //     let cardClone = { ...this.state.currentCard };\n  //     cardClone[rating] = cardClone[rating] + 1;\n  //     let { easy, medium, hard } = cardClone;\n  //     let updateData = {\n  //       [rating]: cardClone[rating],\n  //       priority: calcPriority(easy, medium, hard)\n  //     };\n  //     fetch(\n  //       `/api/users/${userId}/decks/${deckId}/cards/${cardId}`,\n  //       {\n  //         method: 'PUT',\n  //         headers: {\n  //           Accept: 'application/json',\n  //           'Content-Type': 'application/json'\n  //         },\n  //         body: JSON.stringify(updateData)\n  //       }\n  //     );\n  //     this.setState(prev => {\n  //       let prevCard = prev.currentCard;\n  //       prevCard[rating] += 1;\n  //       prevCard.priority = updateData.priority;\n  //       prev.priorityQueue.pop();\n  //       prev.priorityQueue.push(prevCard);\n  //       let newCurrentCard = prev.priorityQueue.peek();\n  //       return { currentCard: newCurrentCard, priorityQueue: prev.priorityQueue };\n  //     });\n  //   };\n\n  render() {\n    return (\n      <div className=\"ShowDeck\">\n        <h2>Users</h2>\n        <ul>\n          {this.state.users.map(({ id: userId, name, email }) => {\n            return (\n              <li>\n                <div>\n                  {name} {email}\n                </div>\n                <Link to={`/users/${userId}/decks`}>View Decks</Link>\n              </li>\n            );\n          })}\n        </ul>\n        <AddUserForm addUser={this.addUser} />\n      </div>\n    );\n  }\n}\n\nexport default ManageUsers;\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nexport class Layout extends Component {\n  static propTypes = {};\n\n  render() {\n    return (\n      <div className=\"Layout\">\n        <p>Inspired by Anki</p>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","import React, { PureComponent } from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport './App.css';\nimport SelectDeck from './components/SelectDeck';\nimport ShowDeck from './components/ShowDeck';\nimport ManageUsers from './components/ManageUsers';\nimport Layout from './components/Layout';\n\nconsole.log('IN APPNAV.js AKA root');\nconst RedirectComponent = () => {\n  return <Redirect to=\"/users\" />;\n};\nconst SelectDeckOption = props => {\n  return <SelectDeck nav={props} />;\n};\n\nconst UseDeckOption = props => {\n  return <ShowDeck nav={props} status=\"use\" />;\n};\n\nconst ManageDeckOption = props => {\n  return <ShowDeck nav={props} status=\"manage\" />;\n};\n\nclass AppNav extends PureComponent {\n  render() {\n    return (\n      <Layout>\n        <h1>Flashcards</h1>\n        <Router>\n          <div>\n            <Route exact path=\"/\" component={() => <RedirectComponent />} />\n            <Route exact path=\"/users\" component={() => <ManageUsers />} />\n            <Route\n              exact\n              path=\"/users/:userId/decks\"\n              component={SelectDeckOption}\n            />\n            <Route\n              path=\"/users/:userId/decks/:deckId/useDeck\"\n              component={UseDeckOption}\n            />\n            <Route\n              path=\"/users/:userId/decks/:deckId/manageDeck\"\n              component={ManageDeckOption}\n            />\n          </div>\n        </Router>\n      </Layout>\n    );\n  }\n}\n\nexport default AppNav;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport AppNav from './AppNav';\nimport * as serviceWorker from './serviceWorker';\n\n// console.log('env:', process.env.NODE_ENV);\nif (process.env.NODE_ENV !== 'production') {\n  console.log('IN dotenv env:');\n  require('dotenv').config();\n}\n\nReactDOM.render(\n  <BrowserRouter>\n    <AppNav />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}